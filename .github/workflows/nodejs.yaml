# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node

# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Workflow syntax for GitHub Actions
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

# Context and expression syntax for GitHub Actions
# https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions

name: NodeJS PUSH CI

on: [push]

jobs:
  lint:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [15]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn lint

  unit-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [15]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn test:unit --coverage
      - uses: codecov/codecov-action@master
        with:
          flags: unittests
          directory: ./coverage
          functionalities: coveragepy, html
          verbose: true

  integration-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [15]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn test:integration --coverage
      - uses: codecov/codecov-action@master
        with:
          flags: integrationtests
          directory: ./coverage
          functionalities: coveragepy, html
          verbose: true

  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [15]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn prod

  build-doc:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [15]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn workspace doc build

      - name: Prepare tag
        id: prepare_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME="${GITHUB_REF##refs/tags/}"
          echo "::set-output name=tag_name::${TAG_NAME}"
          echo "::set-output name=deploy_tag_name::deploy-${TAG_NAME}"

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          personal_token: ${{ secrets.CONFLUX_BOT_GH_TOKEN }}
          external_repository: Conflux-Chain/fluent-wallet-doc
          publish_branch: main
          publish_dir: ./websites/doc/build
          tag_name: ${{ steps.prepare_tag.outputs.deploy_tag_name }}
          tag_message: 'Deployment ${{ steps.prepare_tag.outputs.tag_name }}'

      - name: Deploy test
        if: ${{ !startsWith(github.ref , 'refs/tags/') }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.CONFLUX_BOT_GH_TOKEN }}
          external_repository: Conflux-Chain/fluent-wallet-doc
          publish_branch: main
          publish_dir: ./websites/doc/build

  build-storybook:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [15]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn build-storybook

      - name: Prepare tag
        id: prepare_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME="${GITHUB_REF##refs/tags/}"
          echo "::set-output name=tag_name::${TAG_NAME}"
          echo "::set-output name=deploy_tag_name::deploy-${TAG_NAME}"

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          personal_token: ${{ secrets.CONFLUX_BOT_GH_TOKEN }}
          external_repository: Conflux-Chain/fluent-wallet-storybook
          publish_branch: main
          publish_dir: ./storybook-static
          tag_name: ${{ steps.prepare_tag.outputs.deploy_tag_name }}
          tag_message: 'Deployment ${{ steps.prepare_tag.outputs.tag_name }}'

      - name: Deploy test
        if: ${{ !startsWith(github.ref , 'refs/tags/') }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.CONFLUX_BOT_GH_TOKEN }}
          external_repository: Conflux-Chain/fluent-wallet-storybook
          publish_branch: main
          publish_dir: ./storybook-static

  release-pkg:
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: [lint, unit-test, integration-test, build, build-doc, build-storybook]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [15]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn version apply --all || true
      - env:
          YARN_NPM_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: node ./scripts/publish-all.js || true
      - run: git add .
      - run: |
          git -c user.name='ConfluxBot' \
              -c user.email='confluxbot@users.noreply.github.com' \
              commit \
              --no-verify \
              --message 'chore(release-pkg): release packages' || true
      - env:
          GH_TOKEN: ${{ secrets.CONFLUX_BOT_GH_TOKEN }}
        run: git push --force --verbose "https://ConfluxBot:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}" HEAD:refs/heads/__release-pkg
      - env:
          GITHUB_TOKEN: ${{secrets.CONFLUX_BOT_GH_TOKEN}}
        run: ./scripts/create-pkg-release-pr
