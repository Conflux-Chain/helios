# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node

# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Workflow syntax for GitHub Actions
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

# Context and expression syntax for GitHub Actions
# https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions

# push only, not merge
name: Push Check

on: [push]

jobs:
  lint:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.5]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn lint

  unit-test:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.5]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn test:unit --coverage
      - uses: codecov/codecov-action@v1
        with:
          flags: unittests
          directory: ./coverage
          functionalities: coveragepy, html
          verbose: true

  integration-test:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.5]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn test:integration --coverage --detectOpenHandles --forceExit
      - uses: codecov/codecov-action@v1
        with:
          flags: integrationtests
          directory: ./coverage
          functionalities: coveragepy, html
          verbose: true

  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.5]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn prod

  build-doc:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.5]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn workspace doc build

  build-storybook:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.5]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn build-storybook
