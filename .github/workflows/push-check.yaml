# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node

# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Workflow syntax for GitHub Actions
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

# Context and expression syntax for GitHub Actions
# https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions

# push only, not merge
name: Push Check

on: [push]

jobs:
  lint:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@7.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cli: latest
          bb: latest
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}-${{ hashFiles('./deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn lint

  unit-test:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@7.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cli: latest
          bb: latest
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}-${{ hashFiles('./deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: node scripts/build-content-script.js
      - run: yarn test:unit --coverage
      - uses: codecov/codecov-action@v3
        with:
          flags: unittests
          directory: ./coverage/ut
          verbose: true

  integration-test:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@7.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cli: latest
          bb: latest
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}-${{ hashFiles('./deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn test:integration
      - uses: codecov/codecov-action@v3
        with:
          flags: integrationtests
          directory: ./coverage/integration
          verbose: true

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@7.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cli: latest
          bb: latest
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}-${{ hashFiles('./deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn build

  build-doc:
    if: ${{ github.ref != 'refs/heads/__release-pkg'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@7.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cli: latest
          bb: latest
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ~/.m2/repository
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./.shadow-cljs
          key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}-${{ hashFiles('./deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-yarn-and-maven-
      - run: yarn install --immutable
      - run: yarn workspace doc build
  # build-storybook:
  #   if: ${{ github.ref != 'refs/heads/__release-pkg'}}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.14]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         cache: 'yarn'
  #         node-version: ${{ matrix.node-version }}
  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: "adopt"
  #         java-version: "11"
  #     - name: Install clojure tools
  #       uses: DeLaGuardo/setup-clojure@5.0
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         cli: latest
  #         bb: latest
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
  #     - uses: actions/cache@v2
  #       id: yarn-and-maven-cache # use this to check for `cache-hit` (`steps.yarn-and-maven-cache.outputs.cache-hit != 'true'`)
  #       with:
  #         path: |
  #           ~/.m2/repository
  #           ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #           ./.shadow-cljs
  #         key: ${{ runner.os }}-yarn-and-maven-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('./shadow-cljs.edn') }}-${{ hashFiles('./deps.edn') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-and-maven-
  #     - run: yarn install --immutable
  #     - run: yarn build-storybook
